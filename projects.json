[
    {
        "id": 1,
        "title": "Custom 3D Renderer",
        "subtitle": "Real-time 3D renderer built from scratch using OpenGL and C++",
        "image": "https://via.placeholder.com/400x250/1a1a2e/ffffff?text=3D+Renderer",
        "tags": ["C++", "OpenGL", "GLSL", "OpenGL 4.6", "Assimp", "GLM", "GLFW"],
        "description": "A high-performance 3D rendering engine built from scratch using modern OpenGL and C++. This project demonstrates advanced graphics programming techniques including:\n\n• Physically Based Rendering (PBR) pipeline\n• Real-time shadows with cascade shadow mapping\n• Deferred rendering for optimal performance\n• Post-processing effects (SSAO, Bloom, Tone mapping)\n• Model loading with Assimp integration\n• Custom shader management system\n• Frustum culling and occlusion culling optimization\n\nThe renderer supports various lighting models, material systems, and provides a flexible architecture for creating complex 3D scenes. Performance optimizations include instanced rendering, GPU-driven rendering, and efficient memory management.",
        "images": [
            "https://via.placeholder.com/800x600/1a1a2e/ffffff?text=PBR+Rendering",
            "https://via.placeholder.com/800x600/1a1a2e/64ffda?text=Shadow+Mapping",
            "https://via.placeholder.com/800x600/1a1a2e/ffffff?text=Post+Processing",
            "https://via.placeholder.com/800x600/1a1a2e/64ffda?text=Material+System"
        ],
        "links": [
            { "name": "GitHub Repository", "url": "#" },
            { "name": "Live Demo", "url": "#" },
            { "name": "Documentation", "url": "#" }
        ]
    },
    {
        "id": 2,
        "title": "Physics Engine",
        "subtitle": "Custom physics simulation engine with collision detection",
        "image": "https://via.placeholder.com/400x250/16213e/ffffff?text=Physics+Engine",
        "tags": ["C++", "Physics", "CUDA", "OpenMP", "Eigen", "ImGui"],
        "description": "A comprehensive physics simulation engine designed for real-time applications. The engine implements advanced collision detection algorithms and supports various types of rigid body dynamics:\n\n• Broad-phase collision detection using spatial partitioning\n• Narrow-phase collision with SAT and GJK algorithms\n• Constraint-based physics solver with iterative methods\n• CUDA acceleration for massive particle simulations\n• Fluid dynamics simulation with SPH (Smoothed Particle Hydrodynamics)\n• Soft body physics with mass-spring systems\n• Integration with graphics pipeline for visualization\n\nThe engine is optimized for performance with multi-threading support and GPU acceleration where applicable. It includes debugging tools and visualization features to help developers understand and tune physics behaviors.",
        "images": [
            "https://via.placeholder.com/800x600/16213e/ffffff?text=Collision+Detection",
            "https://via.placeholder.com/800x600/16213e/64ffda?text=Rigid+Body+Dynamics",
            "https://via.placeholder.com/800x600/16213e/ffffff?text=Fluid+Simulation",
            "https://via.placeholder.com/800x600/16213e/64ffda?text=Soft+Body+Physics"
        ],
        "links": [
            { "name": "GitHub Repository", "url": "#" },
            { "name": "Technical Paper", "url": "#" },
            { "name": "Performance Benchmarks", "url": "#" }
        ]
    },
    {
        "id": 3,
        "title": "Real-time Shader Editor",
        "subtitle": "Live shader editing tool with real-time preview",
        "image": "https://via.placeholder.com/400x250/0f3460/ffffff?text=Shader+Editor",
        "tags": ["C#", "DirectX", "HLSL", "DirectX 11", "WPF", ".NET", "SharpDX"],
        "description": "An advanced shader development environment that provides real-time editing and preview capabilities. This tool is designed to streamline the shader development workflow:\n\n• Live shader compilation and error reporting\n• Node-based visual shader editor\n• Real-time preview with customizable 3D scenes\n• Hot-reload functionality for rapid iteration\n• Support for multiple shading languages (HLSL, GLSL)\n• Built-in library of common shader patterns\n• Performance profiling and optimization suggestions\n• Export functionality for various game engines\n\nThe editor features a modern interface built with C# and WPF, utilizing DirectX for rendering. It includes debugging tools, visual node graphs for complex shader logic, and integration with popular game engines.",
        "images": [
            "https://via.placeholder.com/800x600/0f3460/ffffff?text=Shader+Editor+UI",
            "https://via.placeholder.com/800x600/0f3460/64ffda?text=Node+Graph+System",
            "https://via.placeholder.com/800x600/0f3460/ffffff?text=Real-time+Preview",
            "https://via.placeholder.com/800x600/0f3460/64ffda?text=Performance+Tools"
        ],
        "links": [
            { "name": "Download Tool", "url": "#" },
            { "name": "User Guide", "url": "#" },
            { "name": "Shader Library", "url": "#" }
        ]
    },
    {
        "id": 4,
        "title": "Vulcano",
        "subtitle": "Turn-based multiplayer NFT game",
        "image": "Portfolio/Vulkano/vlcsnap-2023-02-17-22h33m14s665.png",
        "tags": ["Unreal Engine 5", "C++", "Amazon GameLift", "Easy Anti-Cheat", "Blockchain"],
        "description": "A complete multiplayer NFT-based strategy game built in Unreal Engine. Vulcano features turn-based gameplay mechanics with blockchain integration for unique digital assets:\n\n• Turn-based strategy gameplay with card mechanics\n• NFT integration for unique collectible cards\n• Real-time multiplayer using Amazon GameLift\n• Anti-cheat protection with Easy Anti-Cheat\n• Cross-platform compatibility\n• Marketplace for trading NFT cards\n• Ranking and tournament systems\n• Custom game engine optimizations\n\nThe game combines traditional strategy gameplay with modern blockchain technology, creating a unique gaming experience where players truly own their in-game assets.",
        "images": [
            "Portfolio/Vulkano/vlcsnap-2023-02-17-22h33m14s665.png",
            "Portfolio/Vulkano/vlcsnap-2023-02-17-22h35m34s8972.png",
            "Portfolio/Vulkano/Vulcano.jpg"
        ],
        "links": [
            { "name": "Game Website", "url": "https://www.vulcano.gg/" }
        ]
        ,
        "video": "https://www.youtube.com/watch?v=uiXwBJeAoow"
    },
    {
        "id": 5,
        "title": "Los asombrosos viajes de Zamba y Nina por la Argentina",
        "subtitle": "Educational interactive series for children",
        "image": "Portfolio/zamba/Zamba.png",
        "tags": ["Unreal Engine", "Animation", "Educational Design"],
        "description": "An educational interactive experience developed for Pakapaka (Public Television Argentina) featuring the beloved characters Zamba and Nina. This project combines entertainment with education to teach children about Argentine geography and culture:\n\n• Interactive storytelling with educational content\n• Real-time 3D environments representing Argentine regions\n• Character animation and voice acting integration\n• Mini-games and interactive elements\n• Educational content about Argentine history and geography\n• Child-friendly user interface design\n• Accessibility features for diverse audiences\n• Integration with broadcast television content\n\nThe project was developed using Unreal Engine to create immersive, educational experiences that engage children while teaching them about their country's rich cultural heritage.",
        "images": [
            "Portfolio/zamba/Zamba.png",
            "Portfolio/zamba/zamba-y-ninapng.webp",
            "Portfolio/zamba/Zamba.webp"
        ],
        "links": [
            { "name": "Pakapaka Official", "url": "#" },
            { "name": "Educational Content", "url": "#" },
            { "name": "Behind the Scenes", "url": "#" }
        ],
        "video": "https://youtu.be/ekyM1b6SCuY"
    },
    {
        "id": 6,
        "title": "Anim Reflect Plugin",
        "subtitle": "Little Tool for mirrored animations in Unreal Engine",
        "image": "Portfolio/MirrorAnimationSystem_Screenshot_01-1920x1080-0e6f9269694712dae2a103f971a862b0.avif",
        "tags": ["c++", "Unreal Engine"],
        "description": "AnimReflect (formerly known as MirrorAnimationSystem) is a plugin for Unreal Engine that allows for dynamic animation reversal. This plugin is based on the original MirrorAnimationSystem project created by Rexocrates. AnimReflect incorporates functionalities that enable mirroring animations with their root motion at runtime, both within the editor and during gameplay.",
        "images": [
            "Portfolio/MirrorAnimationSystem_Screenshot_01-1920x1080-0e6f9269694712dae2a103f971a862b0.avif"
        ],
        "links": [
            { "name": "GitHub Repository", "url": "https://github.com/Nachoidev2/Anim_Reflect" }
        ]
    }
]
